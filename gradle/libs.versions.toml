[versions]
compileSdk = "34"
targetSdk = "34"
minSdk = "26"

jvmTarget = "17"
# https://developer.android.com/build/releases/gradle-plugin#compatibility
agp = "8.2.0"

#https://github.com/JetBrains/compose-multiplatform
compose-multiplatform = "1.5.10"
kotlin = "1.9.20"
ksp = "1.9.20-1.0.13"
kotlin-inject = "0.6.3"

#https://mvnrepository.com/artifact/org.jetbrains.compose.compiler/compiler
composeCompiler = "1.5.3"

# https://developer.android.com/jetpack/androidx/releases/activity
androidxActivity = "1.8.1"
# https://developer.android.com/jetpack/androidx/releases/appcompat
androidxAppCompat = "1.6.1"
#  https://developer.android.com/jetpack/androidx/releases/lifecycle
auth0 = "4.2.2"
auth0-android = "2.0.2"

coreKtx = "1.12.0"
#https://developer.android.com/jetpack/androidx/releases/arch-core
coreTesting = "2.2.0"

kotlinxCoroutines = "1.7.3"
kotlinxSerialization = "1.6.0"

# https://github.com/Kotlin/kotlinx-datetime
kotlinxDatetime = "0.5.0"
# https://github.com/Kotlin/kotlinx-atomicfu
kotlinxAtomicfu = "0.23.1"

# https://github.com/slackhq/circuit/releases
circuit = "0.16.0"
sqldelight = "2.0.1"

okhttp = "4.12.0"

ktor = "2.3.6"

nexus-publish-plugin = "1.3.0"
multiplatform-swiftpackage = "2.2.0"
dokka = "1.9.10"
# https://developer.android.com/jetpack/androidx/releases/security
securityCryptoKtx = "1.1.0-alpha06"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppCompat" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-browser = { module = "androidx.browser:browser", version = "1.7.0" }
androidx-security-crypto-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "securityCryptoKtx" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCryptoKtx" }

#auth0
auth0 = { module = "com.auth0:java-jwt", version.ref = "auth0" }
auth0-jwt = { module = "com.auth0:java-jwt", version.ref = "auth0" }
auth0-jwtdecode = { module = "com.auth0.android:jwtdecode", version.ref = "auth0-android" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

kotlin-inject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlin-inject" }
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlin-inject" }

# Build logic dependencies
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
#licensee-gradlePlugin = { module = "app.cash.licensee:licensee-gradle-plugin", version.ref = "licensee" }
nexusPublish-gradlePlugin = { module = "io.github.gradle-nexus:publish-plugin", version.ref = "nexus-publish-plugin" }
multiplatform-swiftpackage-gradlePlugin = { module = "io.github.luca992.multiplatform-swiftpackage:io.github.luca992.multiplatform-swiftpackage.gradle.plugin", version.ref = "multiplatform-swiftpackage" }
dokka-gradlePlugin = { module = "org.jetbrains.dokka:org.jetbrains.dokka.gradle.plugin", version.ref = "dokka" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinxAtomicfu" }

sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-contentnegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
#ktor-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-jvm = { module = "io.ktor:ktor-server-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }

circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuit-gestureNavigation = { module = "com.slack.circuit:circuitx-gesture-navigation", version.ref = "circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit-retained = { module = "com.slack.circuit:circuit-retained", version.ref = "circuit" }
circuit-runtime = { module = "com.slack.circuit:circuit-runtime", version.ref = "circuit" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# test
assertk = "com.willowtreeapps.assertk:assertk:0.27.0"

# settings
russhwolf-multiplatformsettings = "com.russhwolf:multiplatform-settings:1.1.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kmp = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin"}
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-publish-plugin"}
multiplatform-swiftpackage = { id = "io.github.luca992.multiplatform-swiftpackage", version.ref = "multiplatform-swiftpackage" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }