name: Deploy swift packages
description: Deploy swift packages

inputs:
  branch:
    description: "Branch to push to"
    required: true
  token:
    description: "PAT Github token"
    required: true
  tag:
    description: "Tag name to tag commit with"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/download-artifact@v3
      with:
        name: oidc-swiftpackages
    - name: Create Release
      if: ${{ inputs.tag != '' }}
      uses: ncipollo/release-action@v1.13.0
      with:
        tag: ${{ inputs.tag }}
        generateReleaseNotes: true
        artifacts: "${GITHUB_WORKSPACE}/oidc-appsupport/build/swiftpackage/OpenIdConnectClient.zip,${GITHUB_WORKSPACE}/oidc-appsupport/build/swiftpackage/Package.swift"
        repo: "kalinjul/OpenIdConnectClient"
    - name: Upload Package
      shell: bash
      run: |
        git config --global user.name "Julian Kalinowski"
        git config --global user.email "kalinjul@users.noreply.github.com"
        ls
        echo "oidc-appsupport"
        echo "${GITHUB_WORKSPACE}/oidc-appsupport/build/swiftpackage/"
        cd ${GITHUB_WORKSPACE}/oidc-appsupport/build/swiftpackage/
        git init
        git checkout -b ${{ inputs.branch }}
        git lfs track "*.zip"
        git lfs install
        # copy readme
        cp ${GITHUB_WORKSPACE}/docs/ios/* .
        git add -A
        git commit -m "New ios package"
        git remote add origin https://${{ inputs.token }}@github.com/kalinjul/OpenIdConnectClient.git
        git fetch --depth=1
        git rebase -X theirs origin/${{ inputs.branch }}
        if [ -n "${{ inputs.tag }}" ]; then git tag "${{ inputs.tag }}"; fi
        git push --tags origin ${{ inputs.branch }}